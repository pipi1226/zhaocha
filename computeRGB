#coding=utf-8

import numpy as np
import cv2
from matplotlib import pyplot as plt

img1 = cv2.imread('h1.jpg', cv2.IMREAD_COLOR)          # queryImage
img3 = cv2.imread('h2.jpg', cv2.IMREAD_COLOR)          # trainImage

#img1 = cv2.imread('111.jpg', cv2.IMREAD_COLOR)          # queryImage
#img2 = cv2.imread('222.jpg', cv2.IMREAD_COLOR)          # trainImage

w, h, r = img1.shape
img2 = img3[0:w, 0:h]

print 'w=', w, 'h=', h

blu1 = cv2.GaussianBlur(img1, (3, 3), 0)
blu2 = cv2.GaussianBlur(img3, (3, 3), 0)

r1, g1, b1 = cv2.split(img1)
r2, g2, b2 = cv2.split(img2)

hsv1 = cv2.cvtColor(blu1, cv2.COLOR_BGR2HSV)
hsv2 = cv2.cvtColor(blu2, cv2.COLOR_BGR2HSV)

h1, s1, v1 = cv2.split(hsv1)
h2, s2, v2 = cv2.split(hsv2)

sub1 = s1

for i in range(0, h):
	for j in range(0, w):
		if(s1[j, i] > s2[j, i]):
			sub1[j,i] = s1[j,i] -  s2[j,i]
		else:
			sub1[j,i] = s2[j,i] - s1[j,i]

		if(sub1[j, i] < 20):
			sub1[j,i] = 0

sizeW = 10
sizeH = sizeW
thresholdValue = 20
ww = w / sizeW
hh = h / sizeW

avg1 = r1
avg2 = r2

avg1 = cv2.Canny(img1, 0, 200)
avg2 = cv2.Canny(img2, 0, 200)

for i in range(0, h):
	for j in range(0, w):
		avg1[j, i] = (r1[j, i] / 3 + g1[j, i] / 3 + b1[j, i] / 3)
		avg2[j, i] = (r2[j, i] / 3 + g2[j, i] / 3 + b2[j, i] / 3)
		print '(', avg1[j, i], avg2[j, i], ')'
		print ' '
	print '\n'

for i in range(0, hh):
	for j in range(0, ww):
		maxH = min((i+1) * sizeH, h - 1)
		maxW = min((j+1) * sizeW, w - 1)

		#print 'x1=', j*sizeW, 'y1 = ', i*sizeH, 'x2=', maxW, 'y2 = ', maxH
		#print 'x1=', j*sizeW, 'y1 = ', i*sizeH, 'x2=', (j+1) * sizeW, 'y2 = ', (i+1) * sizeH
		bb1 = avg1[j*sizeW : maxW, i*sizeH : maxH]
		bb2 = avg2[j*sizeW : maxW, i*sizeH : maxH]

		sumArea = (maxH - i*sizeH) * (maxW - j*sizeW)
		sumGray1 = 0
		sumGray2 = 0

		rr1 = 0
		rr2 = 0
		gg1 = 0
		gg2 = 0
		bb1 = 0
		bb2 = 0

		for ii in range(i*sizeH , maxH - 1):
			for jj in range(j*sizeW , maxW - 1):
				if(abs(avg1[jj, ii] - avg2[jj, ii]) > 20):
					rr1 = rr1 + 1
				if(abs(g1[jj, ii] - g2[jj, ii]) > 20 and abs(g1[jj, ii+1] - g2[jj, ii+1]) > 20 and abs(g1[jj+1, ii+1] - g2[jj+1, ii+1]) > 20):
					gg1 = gg1 + 1
				if(abs(b1[jj, ii] - b2[jj, ii]) > 20 and abs(b1[jj, ii+1] - b2[jj, ii+1]) > 20 and abs(b1[jj+1, ii+1] - b2[jj+1, ii+1]) > 20):
					bb1 = bb1 + 1

		x1 = j*sizeW
		y1 = i*sizeH
		x2 = maxW
		y2 = maxH
		if(rr1 > ((maxH - i*sizeH) * (maxW - j*sizeW) / 5)):
			#print rr1, rr2
			cv2.rectangle(img1, (x1, y1), (x2, y2), (255, 0, 0), 1)
			cv2.rectangle(img2, (x1, y1), (x2, y2), (255, 0, 0), 1)
			#cv2.rectangle(avg1, (x1, y1), (x2, y2), (255, 0, 0), 1)
			#cv2.rectangle(avg2, (x1, y1), (x2, y2), (255, 0, 0), 1)


cv2.imshow('avg1', avg1)
cv2.imshow('avg2', avg2)

cv2.imshow('img1', img1)
cv2.imshow('img2', img2)

cv2.waitKey(0)
cv2.destroyAllWindows()